"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = transformSource;
var _path = _interopRequireDefault(require("path"));
var _getPageStaticInfo = require("../../../analysis/get-page-static-info");
var _swc = require("../../../swc");
async function transformSource(source) {
    if (typeof source !== "string") {
        throw new Error("Expected source to have been transformed to a string.");
    }
    const appDir = _path.default.join(this.rootContext, "app");
    const isUnderAppDir = containsPath(appDir, this.resourcePath);
    const filename = _path.default.basename(this.resourcePath);
    const isPageOrLayoutFile = /^(page|layout)\.client\.\w+$/.test(filename);
    const createError = (name)=>new Error(`${name} is not supported in client components.\nFrom: ${this.resourcePath}`);
    if (isUnderAppDir && isPageOrLayoutFile) {
        const swcAST = await (0, _swc).parse(source, {
            filename: this.resourcePath,
            isModule: "unknown"
        });
        const { ssg , ssr  } = (0, _getPageStaticInfo).checkExports(swcAST);
        if (ssg) {
            this.emitError(createError("getStaticProps"));
        }
        if (ssr) {
            this.emitError(createError("getServerSideProps"));
        }
    }
    const output = `
const { createProxy } = require("next/dist/build/webpack/loaders/next-flight-client-loader/module-proxy")\n
module.exports = createProxy(${JSON.stringify(this.resourcePath)})
`;
    return output;
}
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function containsPath(parent, child) {
    const relation = _path.default.relative(parent, child);
    return !!relation && !relation.startsWith("..") && !_path.default.isAbsolute(relation);
}

//# sourceMappingURL=index.js.map